import streamlit as st
import pickle
import pandas as pd

pipe = pickle.load(open('pipe.pkl', 'rb'))

teams = ['Australia',
         'India',
         'Bangladesh',
         'New Zealand',
         'South Africa',
         'England',
         'West Indies',
         'Afghanistan',
         'Pakistan',
         'Sri Lanka']

city = ['Colombo',
        'Mirpur',
        'Johannesburg',
        'Dubai',
        'Auckland',
        'Cape Town',
        'London',
        'Pallekele',
        'Barbados',
        'Sydney',
        'Melbourne',
        'Durban',
        'St Lucia',
        'Wellington',
        'Lauderhill',
        'Hamilton',
        'Centurion',
        'Manchester',
        'Abu Dhabi',
        'Mumbai',
        'Nottingham',
        'Southampton',
        'Mount Maunganui',
        'Chittagong',
        'Kolkata',
        'Lahore',
        'Delhi',
        'Nagpur',
        'Chandigarh',
        'Adelaide',
        'Bangalore',
        'St Kitts',
        'Cardiff',
        'Christchurch',
        'Trinidad']

st.title('Cricket Score Predictor')

col1, col2 ,col3 = st.columns(3)

with col1:
    batting_team = st.selectbox('Select Batting team', sorted(teams))
with col2:
    bowling_team = st.selectbox('Select Bowling team', sorted(teams))
with col3:
    city = st.selectbox('Select city', sorted(city))

col4, col5, col6 = st.columns(3)

with col4:
    current_score = st.number_input('Current Score')
with col5:
    overs = st.number_input('overs done (works for >5 over)')
with col6:
    wickets = st.number_input('Wickets Out')

last_five = st.number_input('Runs scored in last 5 overs')
if st.button('Predict Score'):
    balls_left = 120 - (overs * 6)
    wickets_left = 10 - wickets
    crr = current_score / overs

    input_df = pd.DataFrame(
        {'batting_team': [batting_team], 'bowling_team': [bowling_team], 'city': city, 'current_score': [current_score],
         'balls_left': [balls_left], 'wickets_left': [wickets], 'crr': [crr], 'last_five': [last_five]
         })

    result = pipe.predict(input_df)
    st.header('Predicted Score' + ':- '+str(int(result[0])))